<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCADbANwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDtrXw5PKMs5T6iraeFyOTcEf8AAa6TcKdkYr0HiZs4Y4KmtznP
        +EaXr5zH8Kik0BkUlXJx7V0xcL1prMrDFUsRMmWEpnC3Gmyxkk5/KqTQlTzk1213Arqe9Ys1kxPArspV
        77nm18K09DnWBB5pprZfTT1ZTVWay2DiupVIs5JUpozxnNLUjxFajKtVpqxlqNBzxzxUixSEZCmud8V3
        mu6baLPpqoLbH72VV3Oh/oK8/fUtQmnW4e/uHkB3AmQ9a4q2NhSfK0d9HAzqx5rnsGCDzQ8kcRQzTRxB
        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
        H/LqB/tn+Zqyv3RX3+F/hI+AxOlVo//Z
</value>
  </data>
</root>